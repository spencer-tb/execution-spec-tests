name: Build and Package Fixtures

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: 'fixtures'
            evm-type: 'main'
            fill-params: ''
            solc: '0.8.21'
            python: '3.11'
          # - name: 'fixtures_develop'
          #   evm-type: 'develop'
          #   fill-params: '--until=Prague'
          #   solc: '0.8.21'
          #   python: '3.11'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/build-evm
        id: evm-builder
        with:
          type: ${{ matrix.evm-type }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install solc compiler
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then PLATFORM="linux-amd64"; else PLATFORM="macosx-amd64"; fi
          RELEASE_NAME=$(curl https://binaries.soliditylang.org/${PLATFORM}/list.json | jq -r --arg SOLC_VERSION "${{ matrix.solc }}" '.releases[$SOLC_VERSION]')
          wget -O $GITHUB_WORKSPACE/bin/solc https://binaries.soliditylang.org/${PLATFORM}/$RELEASE_NAME
          chmod a+x $GITHUB_WORKSPACE/bin/solc
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH
      - name: Run fixtures fill
        shell: bash
        run: |
          pip install --upgrade pip
          python -m venv env
          source env/bin/activate
          pip install -e .
          fill ${{ matrix.fill-params }}
      - name: Create fixtures info file
        shell: bash
        run: |
          echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" \
          > fixtures/info.txt
      - name: Tar fixtures output
        shell: bash
        run: |
          tar -czvf ${{ matrix.name }}.tar.gz ./fixtures
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.tar.gz
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: Draft Release
        uses: softprops/action-gh-release@v2
        with:
          files: './**'
          draft: true
          generate_release_notes: true
          fail_on_unmatched_files: true